#VIEWS
#1
CREATE VIEW `all_movies` AS select `Movie`.`Id` AS `Id`,`Movie`.`Movie` AS `Movie Name` from `Movie`;

#2
CREATE VIEW `movies_with_genre` AS select `m`.`Id` AS `id`,`m`.`Movie` AS `Movie Name`,group_concat(`g`.`Genre` separator ',') AS `Genre` from ((`Movie` `m` join `Genre_Movie_Xref` `x1` on((`x1`.`MovieId` = `m`.`Id`))) join `Genre` `g` on((`g`.`Id` = `x1`.`GenreId`))) group by `m`.`Id`;

#3
CREATE VIEW `movie_average_rating` AS select `m`.`Id` AS `id`,`m`.`Movie` AS `Movie Name`,avg(`x`.`Rating`) AS `Average Rating` from (`Movie` `m` join `Rating_Movie_Xref` `x` on((`x`.`MovieId` = `m`.`Id`))) group by `m`.`Id`;

#4
CREATE VIEW `movie_with_tags` AS select `m`.`Id` AS `id`,`m`.`Movie` AS `Movie Name`,group_concat(`t`.`Tag` separator ',') AS `Tags` from ((`Movie` `m` join `Tag_Movie_Xref` `x1` on((`x1`.`MovieId` = `m`.`Id`))) join `Tag` `t` on((`t`.`Id` = `x1`.`TagId`))) group by `m`.`Id`;

#5
CREATE VIEW `movie_with_year` AS select `m`.`Id` AS `id`,`m`.`Movie` AS `Movie Name`,group_concat(`t`.`Year` separator ',') AS `Year` from ((`Movie` `m` join `Time_Movie_Xref` `x1` on((`x1`.`MovieId` = `m`.`Id`))) join `Time` `t` on((`t`.`Id` = `x1`.`TimeId`))) group by `m`.`Id`;

#QUERIES
#select all comedies
select distinct movie
from Movie M
inner join Genre_Movie_Xref GM on GM.movieid = M.id
inner join Genre G on G.id = GM.genreid
where genre like '%comedy%';

#find bad horror movies
select movie, avg(rating) AvgRating
from Movie M
inner join Genre_Movie_Xref GM on M.id = GM.movieid
inner join Genre G on G.id = GM.genreid
inner join Rating_Movie_Xref RM on M.id = RM.movieid
where G.genre like '%horror%'
group by movie
having AvgRating <= 1
order by AvgRating desc;

#find old classics
select movie, year, avg(rating) as AvgRating
from Movie M
inner join Time_Movie_Xref TM on TM.movieid = M.id
inner join Time T on T.id=TM.timeid
inner join Rating_Movie_Xref RM on RM.movieid = M.id
where year < 1980
group by movie, year
having AvgRating > 4
order by AvgRating desc;

#count ratings per user
select firstname, lastname, count(ratingmovieid) as NumRatings
from User_RatingMovie_Xref UR
inner join User U on UR.userid = U.id
group by firstname, lastname;

#data on users who rate on average above 4.5 stars
select firstname, lastname, avg(rating) AvgRating, count(ratingmovieid) NumRatings
from User_RatingMovie_Xref UR
inner join User U on UR.userid = U.id
inner join Rating_Movie_Xref RM on RM.id = UR.ratingmovieid
group by firstname, lastname
having AvgRating >= 4.5;

#data on users who rate on average below 2 stars
select firstname, lastname, avg(rating) AvgRating, count(ratingmovieid) NumRatings
from User_RatingMovie_Xref UR
inner join User U on UR.userid = U.id
inner join Rating_Movie_Xref RM on RM.id = UR.ratingmovieid
group by firstname, lastname
having AvgRating < 2;

#find dark movies
select movie, tag, avg(rating) AvgRating
from Movie M
inner join Tag_Movie_Xref TM on TM.movieid = M.id
inner join Tag T on T.id = TM.tagid
inner join Rating_Movie_Xref RM on RM.movieid = M.id
where tag like '%dark%'
group by movie, tag
order by AvgRating desc;

#Best action movies of the 90's
select movie, year, avg(rating) as AvgRating, genre
from Movie M
inner join Time_Movie_Xref TM on M.id = TM.movieid
inner join Time T on TM.timeid = T.id
inner join Rating_Movie_Xref RM on RM.movieid = M.id
inner join Genre_Movie_Xref GM on GM.movieid = M.id
inner join Genre G on G.id = GM.genreid
where (year > 1989 and year < 2000) and G.genre like '%action%'
group by movie, year
having AvgRating >=4.5
order by AvgRating desc;

#Best Drama movies of the 80's
select movie, year, avg(rating) as AvgRating, genre
from Movie M
inner join Time_Movie_Xref TM on M.id = TM.movieid
inner join Time T on T.id = TM.timeid
inner join Rating_Movie_Xref RM on RM.movieid = M.id
inner join Genre_Movie_Xref GM on GM.movieid = M.id
inner join Genre G on G.id = GM.genreid
where (year > 1979 and year < 1990) and G.genre like '%drama%'
group by movie, year
having AvgRating >=4.5
order by AvgRating desc;

#Worst all time films
select movie, avg(rating) as AvgRating
from Movie M
inner join Rating_Movie_Xref RM on RM.movieid = M.id
group by movie
having AvgRating <= 1
order by AvgRating desc;

#Best movies of all time
select movie, avg(rating) as AvgRating
from Movie M
inner join Rating_Movie_Xref RM on RM.movieid = M.id
group by movie
having AvgRating >= 4.75
order by AvgRating desc;

#Best recent movies
select movie, avg(rating) as AvgRating, year
from Movie M
inner join Time_Movie_Xref TM on M.id = TM.movieid
inner join Time T on T.id = TM.timeid
inner join Rating_Movie_Xref RM on RM.movieid = M.id
where (year > 2010) 
group by movie, year
having AvgRating >= 4.5
order by AvgRating desc, year desc;

#find Brad Pitt movies 
select movie, avg(rating) as AvgRating, tag as Actor
from Movie M
inner join Tag_Movie_Xref TM on TM.movieid= M.id
inner join Tag T on T.id = TM.tagid
inner join Rating_Movie_Xref RM on RM.movieid = M.id
where T.tag like '%Brad Pitt%' 
group by movie
order by AvgRating desc, movie;

#Most overrated movies (highest rated overrated movies)
select movie, avg(rating) as AvgRating
from Movie M
inner join Tag_Movie_Xref TM on TM.movieid= M.id
inner join Tag T on T.id = TM.tagid
inner join Rating_Movie_Xref RM on RM.movieid = M.id
where T.tag like '%Overrated%'
group by movie
having AvgRating >=3
order by AvgRating desc;
